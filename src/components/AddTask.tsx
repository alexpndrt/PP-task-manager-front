import { useState } from "react";
import axios from "axios";

interface AddTaskProps {
  onTaskAdded: () => void; // Fonction pour rafraÃ®chir la liste aprÃ¨s ajout
}

function AddTask({ onTaskAdded }: AddTaskProps) {
  const [title, setTitle] = useState(""); // Ã‰tat pour le champ de la tÃ¢che

  // Fonction appelÃ©e quand on soumet le formulaire
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    // ğŸ”‘ RÃ©cupÃ©ration du token JWT depuis le localStorage
    const token = localStorage.getItem("token");

    if (!token) {
      console.error("Aucun token trouvÃ©, impossible dâ€™ajouter la tÃ¢che");
      return;
    }

    try {
      // ğŸ”— Appel API pour crÃ©er une tÃ¢che avec le token dans les headers
      await axios.post(
        "http://localhost:3001/api/tasks",
        { title, done: false }, // DonnÃ©es envoyÃ©es au serveur
        {
          headers: {
            Authorization: `Bearer ${token}`, // âœ… Envoi du token dans l'en-tÃªte Authorization
          },
        }
      );

      setTitle(""); // On vide le champ aprÃ¨s lâ€™ajout
      onTaskAdded(); // On dÃ©clenche le rafraÃ®chissement de la liste
    } catch (error) {
      console.error("Erreur lors de lâ€™ajout de la tÃ¢che :", error);
    }
  };

  return (
    <form onSubmit={handleSubmit} className="flex gap-3">
      <input
        type="text"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
        placeholder="Ajouter une tÃ¢che..."
        className="flex-1 p-2 border rounded"
        required
      />
      <button
        type="submit"
        className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition"
      >
        Ajouter
      </button>
    </form>
  );
}

export default AddTask;
